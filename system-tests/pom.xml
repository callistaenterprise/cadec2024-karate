<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>sse.callista.workshop.karate</groupId>
  <artifactId>system-tests</artifactId>
  <version>1.0.0</version>
  <packaging>jar</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>21</java.version>
    <maven.compiler.version>3.11.0</maven.compiler.version>
    <maven.surefire.version>3.1.2</maven.surefire.version>
    <logback.version>1.4.11</logback.version>
    <jackson.version>2.15.2</jackson.version>
    <postgresql.version>42.6.0</postgresql.version>
    <jakarta.jms-api.version>3.1.0</jakarta.jms-api.version>
    <activemq.version>6.0.1</activemq.version>
    <commons-dbutils.version>1.8.1</commons-dbutils.version>
    <hikari.version>5.0.1</hikari.version>
    <database-rider.versions>1.41.1-SNAPSHOT</database-rider.versions>
    <karate.version>1.4.0</karate.version>
    <junit.version>5.10.0</junit.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>se.callista.workshop.karate</groupId>
      <artifactId>localhost-test-pki</artifactId>
      <version>1.0.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
        <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jackson.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgresql.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
      <version>${hikari.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-dbutils</groupId>
      <artifactId>commons-dbutils</artifactId>
      <version>${commons-dbutils.version}</version>
    </dependency>
    <dependency>
      <groupId>com.github.database-rider</groupId>
      <artifactId>rider-core</artifactId>
      <version>${database-rider.versions}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-client</artifactId>
      <version>${activemq.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.jms</groupId>
      <artifactId>jakarta.jms-api</artifactId>
      <version>${jakarta.jms-api.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.intuit.karate</groupId>
      <artifactId>karate-junit5</artifactId>
      <version>${karate.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.trivago.rta</groupId>
      <artifactId>cluecumber-core</artifactId>
      <version>3.0.0</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.version}</version>
        <configuration>
          <encoding>UTF-8</encoding>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.version}</version>
        <configuration>
          <argLine>-Dfile.encoding=UTF-8</argLine>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.6.1</version>
        <executions>
          <execution>
            <id>unpack-certificates</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <includeArtifactIds>localhost-test-pki</includeArtifactIds>
        </configuration>
      </plugin>
    </plugins>
    <testResources>
      <testResource>
        <directory>src/test/java</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </testResource>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
    </testResources>
  </build>

  <profiles>
    <profile>
      <id>performance</id>
      <dependencies>
        <dependency>
          <groupId>com.intuit.karate</groupId>
          <artifactId>karate-gatling</artifactId>
          <version>${karate.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven.surefire.version}</version>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
          <plugin>
            <groupId>net.alchim31.maven</groupId>
            <artifactId>scala-maven-plugin</artifactId>
            <version>4.8.1</version>
            <executions>
              <execution>
                <goals>
                  <goal>testCompile</goal>
                </goals>
                <configuration>
                  <excludes>
                    <exclude>java</exclude>
                    <exclude>**/*.java</exclude>
                  </excludes>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <scalaVersion>3.3.1</scalaVersion>
            </configuration>
            </plugin>
          <plugin>
            <groupId>io.gatling</groupId>
            <artifactId>gatling-maven-plugin</artifactId>
            <version>4.7.0</version>
            <configuration>
              <jvmArgs>-Dlogback.configurationFile=logback-performance-test.xml</jvmArgs>
            </configuration>
            <executions>
              <execution>
                <phase>test</phase>
                <goals>
                  <goal>test</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.dbunit</groupId>
            <artifactId>dbunit-maven-plugin</artifactId>
            <version>1.2.0</version>
            <dependencies>
              <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
              </dependency>
            </dependencies>
            <configuration>
              <driver>org.postgresql.Driver</driver>
              <username>admin</username>
              <password>secret</password>
              <type>CLEAN_INSERT</type>
              <format>csv</format>
              <dbconfig>
                <property>
                  <name>datatypeFactory</name>
                  <value>org.dbunit.ext.postgresql.PostgresqlDataTypeFactory</value>
                </property>
              </dbconfig>
            </configuration>
            <executions>
              <execution>
                <id>product-clean-insert</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>operation</goal>
                </goals>
                <configuration>
                  <url>jdbc:postgresql://host.docker.internal:5432/product</url>
                  <sources>
                    <src>src/test/resources/data/performance/product</src>
                  </sources>
                </configuration>
              </execution>
              <execution>
                <id>inventory-clean-insert</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>operation</goal>
                </goals>
                <configuration>
                  <url>jdbc:postgresql://host.docker.internal:5432/inventory</url>
                  <sources>
                    <src>src/test/resources/data/performance/inventory</src>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>